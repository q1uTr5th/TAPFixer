MODULE RUNIN(delay)
VAR
  timer:0..20;
ASSIGN
  init(timer):=0;
  next(timer):=
      case
        delay=0:0;
        timer=0 & delay>0: delay;
        timer>0 & delay>0: timer - 1;
        TRUE: timer;
      esac;

MODULE main
   VAR
     presenceSensor.presence:{not_present,present};
     presenceSensor.presence_last:{not_present,present};
     smartPlug.switch:{off,on};
     smartPlug.switch_last:{off,on};
     hubConnection.connection:boolean;
     hubConnection.connection_last:boolean;
     step:0..2;
     original_flag_rule0_presenceSensor.presence_0:boolean;
     original_flag_rule0_presenceSensor.presence_1:boolean;
     original_flag_rule1_presenceSensor.presence_0:boolean;
     original_flag_rule1_presenceSensor.presence_1:boolean;
   INVAR
     toint(original_flag_rule0_presenceSensor.presence_0) + toint(original_flag_rule0_presenceSensor.presence_1) < 2
   INVAR
     toint(original_flag_rule1_presenceSensor.presence_0) + toint(original_flag_rule1_presenceSensor.presence_1) < 2

   INVAR
     !(original_flag_rule1_presenceSensor.presence_0 = FALSE & original_flag_rule1_presenceSensor.presence_1 = TRUE )
   ASSIGN
    init(step) := 1;
    next(step) :=
        case
            step < 2 & step > 0: step + 1;
            step = 2: 0;
            TRUE: step;
    esac;


     init(presenceSensor.presence):=not_present;
     next(presenceSensor.presence):=
       case
         next(step) = 2: not_present;
         TRUE: {not_present,present};
       esac;

         init(hubConnection.connection) := TRUE;
      init(presenceSensor.presence_last):=present;
      init(smartPlug.switch_last):=on;

      next(presenceSensor.presence_last):=presenceSensor.presence;
      next(smartPlug.switch_last):=smartPlug.switch;
      next(hubConnection.connection_last):=hubConnection.connection;

     next(hubConnection.connection):=
       case
         next(step) = 2: TRUE;
         TRUE: hubConnection.connection;
       esac;

      next(original_flag_rule0_presenceSensor.presence_0) := original_flag_rule0_presenceSensor.presence_0; 

      next(original_flag_rule0_presenceSensor.presence_1) := original_flag_rule0_presenceSensor.presence_1; 

      next(original_flag_rule1_presenceSensor.presence_0) := original_flag_rule1_presenceSensor.presence_0; 

      next(original_flag_rule1_presenceSensor.presence_1) := original_flag_rule1_presenceSensor.presence_1; 

    init(smartPlug.switch):=on;
    next(smartPlug.switch):=
          case
             hubConnection.connection=FALSE&hubConnection.connection!=hubConnection.connection_last & ((original_flag_rule0_presenceSensor.presence_0)->(presenceSensor.presence = not_present)) & ((original_flag_rule0_presenceSensor.presence_1)->(presenceSensor.presence = present)):off;
             hubConnection.connection=TRUE&hubConnection.connection!=hubConnection.connection_last & ((original_flag_rule1_presenceSensor.presence_0)->(presenceSensor.presence = not_present)) & ((original_flag_rule1_presenceSensor.presence_1)->(presenceSensor.presence = present)):off;
             hubConnection.connection=TRUE&hubConnection.connection!=hubConnection.connection_last&presenceSensor.presence=present:off;
             TRUE:smartPlug.switch;
          esac;
