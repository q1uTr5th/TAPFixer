MODULE RUNIN(delay)
VAR
  timer:0..20;
ASSIGN
  init(timer):=0;
  next(timer):=
      case
        delay=0:0;
        timer=0 & delay>0: delay;
        timer>0 & delay>0: timer - 1;
        TRUE: timer;
      esac;

MODULE main
   VAR
     alarm.alarm:{off,siren};
     alarm.alarm_last:{off,siren};
     smokeDetector.smoke:{clear,detected};
     smokeDetector.smoke_last:{clear,detected};
     smokeDetector.smoke_count:0..1;
     smokeDetector.smoke_CONFIG:-1..8;
     smokeDetector.smoke_threshold:4..8;
     smokeDetector.smoke_not_handle_config:0..0;
     lightSensor.illuminance:0..400;
     lightSensor.illuminance_last:0..400;
     motionSensor.motion:{active,inactive};
     motionSensor.motion_last:{active,inactive};
     step:0..4;
     original_flag_rule0_motionSensor.motion_0:boolean;
     original_flag_rule0_motionSensor.motion_1:boolean;
     original_flag_rule2_smokeDetector.smoke_0:boolean;
     original_flag_rule2_smokeDetector.smoke_1:boolean;
   INVAR
     smokeDetector.smoke_not_handle_config = 0
    INVAR
        smokeDetector.smoke_threshold = 4 

   INVAR
     toint(original_flag_rule0_motionSensor.motion_0) + toint(original_flag_rule0_motionSensor.motion_1) < 2
   INVAR
     toint(original_flag_rule2_smokeDetector.smoke_0) + toint(original_flag_rule2_smokeDetector.smoke_1) < 2

   INVAR
     !(original_flag_rule0_motionSensor.motion_0 = TRUE & original_flag_rule0_motionSensor.motion_1 = FALSE )
   ASSIGN
    init(step) := 1;
    next(step) :=
        case
            step < 4 & step > 0: step + 1;
            step = 4: 0;
            TRUE: step;
    esac;

         init(lightSensor.illuminance_last) := 0;
         init(motionSensor.motion) := active;
         init(lightSensor.illuminance) := 0;
     init(smokeDetector.smoke_count):=1;
        next(smokeDetector.smoke_count):=
             case
               next(smokeDetector.smoke)!=smokeDetector.smoke & smokeDetector.smoke_count =0: 1;
               smokeDetector.smoke_count = 1: 0;
               TRUE: smokeDetector.smoke_count;
             esac;

        init(smokeDetector.smoke):=clear;
        next(smokeDetector.smoke):=
            case

               smokeDetector.smoke_CONFIG>=0 & smokeDetector.smoke_CONFIG<smokeDetector.smoke_threshold: detected;
               smokeDetector.smoke_CONFIG>=smokeDetector.smoke_threshold: clear;
               --因为顺序执行，所以下面肯定是smoke_clear=-1
               smokeDetector.smoke_count = 1: smokeDetector.smoke;
               smokeDetector.smoke_count = 0: {clear,detected};
               TRUE: smokeDetector.smoke;
             esac;

 init(smokeDetector.smoke_CONFIG):=-1;
     next(smokeDetector.smoke_CONFIG):=
       case
         smokeDetector.smoke=detected & smokeDetector.smoke!=smokeDetector.smoke_last: 0;
         smokeDetector.smoke_CONFIG>=0 & smokeDetector.smoke_CONFIG<smokeDetector.smoke_threshold & (smokeDetector.smoke_CONFIG+smokeDetector.smoke_not_handle_config)>=0: smokeDetector.smoke_CONFIG + smokeDetector.smoke_not_handle_config;
         smokeDetector.smoke_CONFIG>=0 & smokeDetector.smoke_CONFIG<smokeDetector.smoke_threshold & (smokeDetector.smoke_CONFIG+smokeDetector.smoke_not_handle_config)<0: 0;
         smokeDetector.smoke_CONFIG>=smokeDetector.smoke_threshold: -1;
         TRUE: smokeDetector.smoke_CONFIG;
       esac;

      init(alarm.alarm_last):=off;
      init(smokeDetector.smoke_last):=clear;

      next(alarm.alarm_last):=alarm.alarm;
      next(smokeDetector.smoke_last):=smokeDetector.smoke;
      next(lightSensor.illuminance_last):=lightSensor.illuminance;
      next(motionSensor.motion_last):=motionSensor.motion;

     next(motionSensor.motion):=
       case
         next(step) = 2: active;
         next(step) = 3: active;
         next(step) = 4: active;
         TRUE: motionSensor.motion;
       esac;

      next(original_flag_rule0_motionSensor.motion_0) := original_flag_rule0_motionSensor.motion_0; 

      next(original_flag_rule0_motionSensor.motion_1) := original_flag_rule0_motionSensor.motion_1; 

      next(original_flag_rule2_smokeDetector.smoke_0) := original_flag_rule2_smokeDetector.smoke_0; 

      next(original_flag_rule2_smokeDetector.smoke_1) := original_flag_rule2_smokeDetector.smoke_1; 

    init(alarm.alarm):=off;
    next(alarm.alarm):=
          case
             lightSensor.illuminance=4&lightSensor.illuminance!=lightSensor.illuminance_last&smokeDetector.smoke = detected & ((original_flag_rule0_motionSensor.motion_0)->(motionSensor.motion = active)) & ((original_flag_rule0_motionSensor.motion_1)->(motionSensor.motion = inactive)):off;
             lightSensor.illuminance=4&lightSensor.illuminance!=lightSensor.illuminance_last&motionSensor.motion = active&smokeDetector.smoke = detected:off;
             motionSensor.motion=active&motionSensor.motion!=motionSensor.motion_last & ((original_flag_rule2_smokeDetector.smoke_0)->(smokeDetector.smoke = clear)) & ((original_flag_rule2_smokeDetector.smoke_1)->(smokeDetector.smoke = detected)):siren;
             TRUE:alarm.alarm;
          esac;
