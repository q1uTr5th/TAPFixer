MODULE RUNIN(delay)
VAR
  timer:0..20;
ASSIGN
  init(timer):=0;
  next(timer):=
      case
        delay=0:0;
        timer=0 & delay>0: delay;
        timer>0 & delay>0: timer - 1;
        TRUE: timer;
      esac;

MODULE main
   VAR
     doorControl.door:{closed,open};
     doorControl.door_last:{closed,open};
     presenceSensor.presence:{not_present,present};
     presenceSensor.presence_last:{not_present,present};
     motionSensor.motion:{active,inactive};
     motionSensor.motion_last:{active,inactive};
     step:0..2;
     original_flag_rule0_presenceSensor.presence_0:boolean;
     original_flag_rule0_presenceSensor.presence_1:boolean;
   INVAR
     toint(original_flag_rule0_presenceSensor.presence_0) + toint(original_flag_rule0_presenceSensor.presence_1) < 2
   ASSIGN
    init(step) := 1;
    next(step) :=
        case
            step < 2 & step > 0: step + 1;
            step = 2: 0;
            TRUE: step;
    esac;


     init(presenceSensor.presence):=not_present;
     next(presenceSensor.presence):=
       case
         next(step) = 2: not_present;
         TRUE: {not_present,present};
       esac;

         init(motionSensor.motion) := inactive;
      init(doorControl.door_last):=open;
      init(presenceSensor.presence_last):=present;

      next(doorControl.door_last):=doorControl.door;
      next(presenceSensor.presence_last):=presenceSensor.presence;
      next(motionSensor.motion_last):=motionSensor.motion;

     next(motionSensor.motion):=
       case
         next(step) = 2: inactive;
         TRUE: motionSensor.motion;
       esac;

      next(original_flag_rule0_presenceSensor.presence_0) := original_flag_rule0_presenceSensor.presence_0; 

      next(original_flag_rule0_presenceSensor.presence_1) := original_flag_rule0_presenceSensor.presence_1; 

    init(doorControl.door):=open;
    next(doorControl.door):=
          case
             motionSensor.motion=active&motionSensor.motion!=motionSensor.motion_last & ((original_flag_rule0_presenceSensor.presence_0)->(presenceSensor.presence = not_present)) & ((original_flag_rule0_presenceSensor.presence_1)->(presenceSensor.presence = present)):closed;
             TRUE:doorControl.door;
          esac;
