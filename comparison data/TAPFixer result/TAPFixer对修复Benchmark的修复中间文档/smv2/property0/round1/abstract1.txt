MODULE RUNIN(delay)
VAR
  timer:0..20;
ASSIGN
  init(timer):=0;
  next(timer):=
      case
        delay=0:0;
        timer=0 & delay>0: delay;
        timer>0 & delay>0: timer - 1;
        TRUE: timer;
      esac;

MODULE main
   VAR
     light.switch:{off,on};
     light.switch_last:{off,on};
     presenceSensor.presence:{not_present,present};
     presenceSensor.presence_last:{not_present,present};
     doorControl.door:{closed,open};
     doorControl.door_last:{closed,open};
     carbonMonoxideDetector.carbonMonoxide:{clear,detected};
     carbonMonoxideDetector.carbonMonoxide_last:{clear,detected};
     carbonMonoxideDetector.carbonMonoxide_count:0..1;
     carbonMonoxideDetector.carbonMonoxide_CONFIG:-1..8;
     carbonMonoxideDetector.carbonMonoxide_threshold:4..8;
     carbonMonoxideDetector.carbonMonoxide_not_handle_config:0..0;
     motionSensor.motion:{active,inactive};
     motionSensor.motion_last:{active,inactive};
     carbonDioxideMeasurement.carbonDioxide:0..10;
     carbonDioxideMeasurement.carbonDioxide_last:0..10;
     carbonDioxideMeasurement.carbonDioxide_count:0..1;
     carbonDioxideMeasurement.carbonDioxide_CONFIG:-8..8;
     carbonDioxideMeasurement.carbonDioxide_rise_threshold:4..8;
     carbonDioxideMeasurement.carbonDioxide_drop_threshold:-8..-4;
     carbonDioxideMeasurement.carbonDioxide_not_handle_config:0..0;
     ignition.switch:{on,off};
     ignition.switch_last:{on,off};
     step:0..4;
     original_flag_rule0_motionSensor.motion_0:boolean;
     original_flag_rule0_motionSensor.motion_1:boolean;
     original_flag_rule0_ignition.switch_0:boolean;
     original_flag_rule0_ignition.switch_1:boolean;
     original_flag_rule0_presenceSensor.presence_0:boolean;
     original_flag_rule0_presenceSensor.presence_1:boolean;
     original_flag_rule0_carbonMonoxideDetector.carbonMonoxide_0:boolean;
     original_flag_rule0_carbonMonoxideDetector.carbonMonoxide_1:boolean;
     original_flag_rule1_doorControl.door_0:boolean;
     original_flag_rule1_doorControl.door_1:boolean;
     original_flag_rule1_motionSensor.motion_0:boolean;
     original_flag_rule1_motionSensor.motion_1:boolean;
     original_flag_rule1_ignition.switch_0:boolean;
     original_flag_rule1_ignition.switch_1:boolean;
     original_flag_rule1_presenceSensor.presence_0:boolean;
     original_flag_rule1_presenceSensor.presence_1:boolean;
     original_flag_rule2_doorControl.door_0:boolean;
     original_flag_rule2_doorControl.door_1:boolean;
     original_flag_rule2_ignition.switch_0:boolean;
     original_flag_rule2_ignition.switch_1:boolean;
     original_flag_rule2_presenceSensor.presence_0:boolean;
     original_flag_rule2_presenceSensor.presence_1:boolean;
     original_flag_rule2_carbonMonoxideDetector.carbonMonoxide_0:boolean;
     original_flag_rule2_carbonMonoxideDetector.carbonMonoxide_1:boolean;
   INVAR
     carbonMonoxideDetector.carbonMonoxide_not_handle_config = 0
   INVAR
     carbonDioxideMeasurement.carbonDioxide_not_handle_config = 0
    INVAR
        carbonMonoxideDetector.carbonMonoxide_threshold = 4 &     carbonDioxideMeasurement.carbonDioxide_rise_threshold = 4 &     carbonDioxideMeasurement.carbonDioxide_drop_threshold = -8 

   INVAR
     toint(original_flag_rule0_motionSensor.motion_0) + toint(original_flag_rule0_motionSensor.motion_1) < 2
   INVAR
     toint(original_flag_rule0_ignition.switch_0) + toint(original_flag_rule0_ignition.switch_1) < 2
   INVAR
     toint(original_flag_rule0_presenceSensor.presence_0) + toint(original_flag_rule0_presenceSensor.presence_1) < 2
   INVAR
     toint(original_flag_rule0_carbonMonoxideDetector.carbonMonoxide_0) + toint(original_flag_rule0_carbonMonoxideDetector.carbonMonoxide_1) < 2
   INVAR
     toint(original_flag_rule1_doorControl.door_0) + toint(original_flag_rule1_doorControl.door_1) < 2
   INVAR
     toint(original_flag_rule1_motionSensor.motion_0) + toint(original_flag_rule1_motionSensor.motion_1) < 2
   INVAR
     toint(original_flag_rule1_ignition.switch_0) + toint(original_flag_rule1_ignition.switch_1) < 2
   INVAR
     toint(original_flag_rule1_presenceSensor.presence_0) + toint(original_flag_rule1_presenceSensor.presence_1) < 2
   INVAR
     toint(original_flag_rule2_doorControl.door_0) + toint(original_flag_rule2_doorControl.door_1) < 2
   INVAR
     toint(original_flag_rule2_ignition.switch_0) + toint(original_flag_rule2_ignition.switch_1) < 2
   INVAR
     toint(original_flag_rule2_presenceSensor.presence_0) + toint(original_flag_rule2_presenceSensor.presence_1) < 2
   INVAR
     toint(original_flag_rule2_carbonMonoxideDetector.carbonMonoxide_0) + toint(original_flag_rule2_carbonMonoxideDetector.carbonMonoxide_1) < 2
   ASSIGN
    init(step) := 1;
    next(step) :=
        case
            step < 4 & step > 0: step + 1;
            step = 4: 0;
            TRUE: step;
    esac;

         init(carbonDioxideMeasurement.carbonDioxide_last) := 0;

     init(presenceSensor.presence):=not_present;
     next(presenceSensor.presence):=
       case
         next(step) = 2: not_present;
         next(step) = 3: present;
         next(step) = 4: not_present;
         TRUE: {not_present,present};
       esac;

         init(motionSensor.motion) := active;
         init(ignition.switch) := on;
     
    init(carbonDioxideMeasurement.carbonDioxide):=0;     
    next(carbonDioxideMeasurement.carbonDioxide):=
        case

          -- 如果在threshold范围内，则温度不变
          carbonDioxideMeasurement.carbonDioxide_CONFIG<carbonDioxideMeasurement.carbonDioxide_rise_threshold & carbonDioxideMeasurement.carbonDioxide_CONFIG>carbonDioxideMeasurement.carbonDioxide_drop_threshold: carbonDioxideMeasurement.carbonDioxide;
          carbonDioxideMeasurement.carbonDioxide_CONFIG>=carbonDioxideMeasurement.carbonDioxide_rise_threshold & carbonDioxideMeasurement.carbonDioxide + 1<=10: carbonDioxideMeasurement.carbonDioxide + 1;
          carbonDioxideMeasurement.carbonDioxide_CONFIG<=carbonDioxideMeasurement.carbonDioxide_drop_threshold & carbonDioxideMeasurement.carbonDioxide - 1>=0: carbonDioxideMeasurement.carbonDioxide - 1;
          TRUE: carbonDioxideMeasurement.carbonDioxide;
        esac;

 init(carbonDioxideMeasurement.carbonDioxide_CONFIG):=0;
        next(carbonDioxideMeasurement.carbonDioxide_CONFIG):=
          case
            -- 超过threshold后重新计数
            carbonDioxideMeasurement.carbonDioxide_CONFIG>=carbonDioxideMeasurement.carbonDioxide_rise_threshold : 0;
            carbonDioxideMeasurement.carbonDioxide_CONFIG<=carbonDioxideMeasurement.carbonDioxide_drop_threshold : 0;
            TRUE: carbonDioxideMeasurement.carbonDioxide_CONFIG;
          esac;

     init(carbonMonoxideDetector.carbonMonoxide_count):=1;
        next(carbonMonoxideDetector.carbonMonoxide_count):=
             case
               next(carbonMonoxideDetector.carbonMonoxide)!=carbonMonoxideDetector.carbonMonoxide & carbonMonoxideDetector.carbonMonoxide_count =0: 1;
               carbonMonoxideDetector.carbonMonoxide_count = 1: 0;
               TRUE: carbonMonoxideDetector.carbonMonoxide_count;
             esac;

        init(carbonMonoxideDetector.carbonMonoxide):=detected;
        next(carbonMonoxideDetector.carbonMonoxide):=
            case

               carbonMonoxideDetector.carbonMonoxide_CONFIG>=0 & carbonMonoxideDetector.carbonMonoxide_CONFIG<carbonMonoxideDetector.carbonMonoxide_threshold: detected;
               carbonMonoxideDetector.carbonMonoxide_CONFIG>=carbonMonoxideDetector.carbonMonoxide_threshold: clear;
               --因为顺序执行，所以下面肯定是smoke_clear=-1
               carbonMonoxideDetector.carbonMonoxide_count = 1: carbonMonoxideDetector.carbonMonoxide;
               carbonMonoxideDetector.carbonMonoxide_count = 0: {clear,detected};
               TRUE: carbonMonoxideDetector.carbonMonoxide;
             esac;

 init(carbonMonoxideDetector.carbonMonoxide_CONFIG):=-1;
     next(carbonMonoxideDetector.carbonMonoxide_CONFIG):=
       case
         carbonMonoxideDetector.carbonMonoxide=detected & carbonMonoxideDetector.carbonMonoxide!=carbonMonoxideDetector.carbonMonoxide_last: 0;
         carbonMonoxideDetector.carbonMonoxide_CONFIG>=0 & carbonMonoxideDetector.carbonMonoxide_CONFIG<carbonMonoxideDetector.carbonMonoxide_threshold & (carbonMonoxideDetector.carbonMonoxide_CONFIG+carbonMonoxideDetector.carbonMonoxide_not_handle_config)>=0: carbonMonoxideDetector.carbonMonoxide_CONFIG + carbonMonoxideDetector.carbonMonoxide_not_handle_config;
         carbonMonoxideDetector.carbonMonoxide_CONFIG>=0 & carbonMonoxideDetector.carbonMonoxide_CONFIG<carbonMonoxideDetector.carbonMonoxide_threshold & (carbonMonoxideDetector.carbonMonoxide_CONFIG+carbonMonoxideDetector.carbonMonoxide_not_handle_config)<0: 0;
         carbonMonoxideDetector.carbonMonoxide_CONFIG>=carbonMonoxideDetector.carbonMonoxide_threshold: -1;
         TRUE: carbonMonoxideDetector.carbonMonoxide_CONFIG;
       esac;

      init(light.switch_last):=off;
      init(presenceSensor.presence_last):=not_present;
      init(carbonMonoxideDetector.carbonMonoxide_last):=clear;

      next(light.switch_last):=light.switch;
      next(presenceSensor.presence_last):=presenceSensor.presence;
      next(doorControl.door_last):=doorControl.door;
      next(carbonMonoxideDetector.carbonMonoxide_last):=carbonMonoxideDetector.carbonMonoxide;
      next(motionSensor.motion_last):=motionSensor.motion;
      next(carbonDioxideMeasurement.carbonDioxide_last):=carbonDioxideMeasurement.carbonDioxide;
      next(ignition.switch_last):=ignition.switch;

     next(motionSensor.motion):=
       case
         next(step) = 2: inactive;
         next(step) = 3: active;
         next(step) = 4: active;
         TRUE: motionSensor.motion;
       esac;


     next(ignition.switch):=
       case
         next(step) = 2: on;
         next(step) = 3: on;
         next(step) = 4: on;
         TRUE: ignition.switch;
       esac;

      next(original_flag_rule0_motionSensor.motion_0) := original_flag_rule0_motionSensor.motion_0; 

      next(original_flag_rule0_motionSensor.motion_1) := original_flag_rule0_motionSensor.motion_1; 

      next(original_flag_rule0_ignition.switch_0) := original_flag_rule0_ignition.switch_0; 

      next(original_flag_rule0_ignition.switch_1) := original_flag_rule0_ignition.switch_1; 

      next(original_flag_rule0_presenceSensor.presence_0) := original_flag_rule0_presenceSensor.presence_0; 

      next(original_flag_rule0_presenceSensor.presence_1) := original_flag_rule0_presenceSensor.presence_1; 

      next(original_flag_rule0_carbonMonoxideDetector.carbonMonoxide_0) := original_flag_rule0_carbonMonoxideDetector.carbonMonoxide_0; 

      next(original_flag_rule0_carbonMonoxideDetector.carbonMonoxide_1) := original_flag_rule0_carbonMonoxideDetector.carbonMonoxide_1; 

      next(original_flag_rule1_doorControl.door_0) := original_flag_rule1_doorControl.door_0; 

      next(original_flag_rule1_doorControl.door_1) := original_flag_rule1_doorControl.door_1; 

      next(original_flag_rule1_motionSensor.motion_0) := original_flag_rule1_motionSensor.motion_0; 

      next(original_flag_rule1_motionSensor.motion_1) := original_flag_rule1_motionSensor.motion_1; 

      next(original_flag_rule1_ignition.switch_0) := original_flag_rule1_ignition.switch_0; 

      next(original_flag_rule1_ignition.switch_1) := original_flag_rule1_ignition.switch_1; 

      next(original_flag_rule1_presenceSensor.presence_0) := original_flag_rule1_presenceSensor.presence_0; 

      next(original_flag_rule1_presenceSensor.presence_1) := original_flag_rule1_presenceSensor.presence_1; 

      next(original_flag_rule2_doorControl.door_0) := original_flag_rule2_doorControl.door_0; 

      next(original_flag_rule2_doorControl.door_1) := original_flag_rule2_doorControl.door_1; 

      next(original_flag_rule2_ignition.switch_0) := original_flag_rule2_ignition.switch_0; 

      next(original_flag_rule2_ignition.switch_1) := original_flag_rule2_ignition.switch_1; 

      next(original_flag_rule2_presenceSensor.presence_0) := original_flag_rule2_presenceSensor.presence_0; 

      next(original_flag_rule2_presenceSensor.presence_1) := original_flag_rule2_presenceSensor.presence_1; 

      next(original_flag_rule2_carbonMonoxideDetector.carbonMonoxide_0) := original_flag_rule2_carbonMonoxideDetector.carbonMonoxide_0; 

      next(original_flag_rule2_carbonMonoxideDetector.carbonMonoxide_1) := original_flag_rule2_carbonMonoxideDetector.carbonMonoxide_1; 

    init(light.switch):=on;
    next(light.switch):=
          case
             doorControl.door=open&doorControl.door!=doorControl.door_last & ((original_flag_rule0_motionSensor.motion_0)->(motionSensor.motion = active)) & ((original_flag_rule0_motionSensor.motion_1)->(motionSensor.motion = inactive)) & ((original_flag_rule0_ignition.switch_0)->(ignition.switch = on)) & ((original_flag_rule0_ignition.switch_1)->(ignition.switch = off)) & ((original_flag_rule0_presenceSensor.presence_0)->(presenceSensor.presence = not_present)) & ((original_flag_rule0_presenceSensor.presence_1)->(presenceSensor.presence = present)) & ((original_flag_rule0_carbonMonoxideDetector.carbonMonoxide_0)->(carbonMonoxideDetector.carbonMonoxide = clear)) & ((original_flag_rule0_carbonMonoxideDetector.carbonMonoxide_1)->(carbonMonoxideDetector.carbonMonoxide = detected)):on;
             carbonMonoxideDetector.carbonMonoxide=detected&carbonMonoxideDetector.carbonMonoxide!=carbonMonoxideDetector.carbonMonoxide_last & ((original_flag_rule1_doorControl.door_0)->(doorControl.door = closed)) & ((original_flag_rule1_doorControl.door_1)->(doorControl.door = open)) & ((original_flag_rule1_motionSensor.motion_0)->(motionSensor.motion = active)) & ((original_flag_rule1_motionSensor.motion_1)->(motionSensor.motion = inactive)) & ((original_flag_rule1_ignition.switch_0)->(ignition.switch = on)) & ((original_flag_rule1_ignition.switch_1)->(ignition.switch = off)) & ((original_flag_rule1_presenceSensor.presence_0)->(presenceSensor.presence = not_present)) & ((original_flag_rule1_presenceSensor.presence_1)->(presenceSensor.presence = present)):on;
             motionSensor.motion=active&motionSensor.motion!=motionSensor.motion_last & ((original_flag_rule2_doorControl.door_0)->(doorControl.door = closed)) & ((original_flag_rule2_doorControl.door_1)->(doorControl.door = open)) & ((original_flag_rule2_ignition.switch_0)->(ignition.switch = on)) & ((original_flag_rule2_ignition.switch_1)->(ignition.switch = off)) & ((original_flag_rule2_presenceSensor.presence_0)->(presenceSensor.presence = not_present)) & ((original_flag_rule2_presenceSensor.presence_1)->(presenceSensor.presence = present)) & ((original_flag_rule2_carbonMonoxideDetector.carbonMonoxide_0)->(carbonMonoxideDetector.carbonMonoxide = clear)) & ((original_flag_rule2_carbonMonoxideDetector.carbonMonoxide_1)->(carbonMonoxideDetector.carbonMonoxide = detected)):off;
             TRUE:light.switch;
          esac;
    init(doorControl.door):=open;
    next(doorControl.door):=
          case
             carbonDioxideMeasurement.carbonDioxide=9&carbonDioxideMeasurement.carbonDioxide!=carbonDioxideMeasurement.carbonDioxide_last&carbonDioxideMeasurement.carbonDioxide_last=8:open;
             ignition.switch=off&ignition.switch!=ignition.switch_last:closed;
             TRUE:doorControl.door;
          esac;
