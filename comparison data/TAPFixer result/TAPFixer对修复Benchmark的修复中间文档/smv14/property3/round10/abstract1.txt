MODULE RUNIN(delay)
VAR
  timer:0..20;
ASSIGN
  init(timer):=0;
  next(timer):=
      case
        delay=0:0;
        timer=0 & delay>0: delay;
        timer>0 & delay>0: timer - 1;
        TRUE: timer;
      esac;

MODULE main
   VAR
     doorControl.door:{closed,open};
     doorControl.door_last:{closed,open};
     presenceSensor.presence:{not_present,present};
     presenceSensor.presence_last:{not_present,present};
     ignition.switch:{on,off};
     ignition.switch_last:{on,off};
     step:0..4;
   ASSIGN
    init(step) := 1;
    next(step) :=
        case
            step < 4 & step > 0: step + 1;
            step = 4: 0;
            TRUE: step;
    esac;


     init(presenceSensor.presence):=present;
     next(presenceSensor.presence):=
       case
         next(step) = 2: present;
         next(step) = 3: not_present;
         next(step) = 4: not_present;
         TRUE: {not_present,present};
       esac;

         init(ignition.switch) := on;
      init(doorControl.door_last):=open;
      init(presenceSensor.presence_last):=present;

      next(doorControl.door_last):=doorControl.door;
      next(presenceSensor.presence_last):=presenceSensor.presence;
      next(ignition.switch_last):=ignition.switch;

     next(ignition.switch):=
       case
         next(step) = 2: off;
         next(step) = 3: on;
         next(step) = 4: on;
         TRUE: ignition.switch;
       esac;

    init(doorControl.door):=closed;
    next(doorControl.door):=
          case
             ignition.switch=on&ignition.switch!=ignition.switch_last&presenceSensor.presence = not_present:open;
             TRUE:doorControl.door;
          esac;
