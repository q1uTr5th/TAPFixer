MODULE RUNIN(delay)
VAR
  timer:0..20;
ASSIGN
  init(timer):=0;
  next(timer):=
      case
        delay=0:0;
        timer=0 & delay>0: delay;
        timer>0 & delay>0: timer - 1;
        TRUE: timer;
      esac;

MODULE main
   VAR
     presenceSensor.presence:{not_present,present};
     presenceSensor.presence_last:{not_present,present};
     smartPlug.switch:{off,on};
     smartPlug.switch_last:{off,on};
     relativeHumidityMeasurement.humidity:0..20;
     relativeHumidityMeasurement.humidity_last:0..20;
     relativeHumidityMeasurement.humidity_count:0..1;
     relativeHumidityMeasurement.humidity_CONFIG:-8..8;
     relativeHumidityMeasurement.humidity_rise_threshold:4..8;
     relativeHumidityMeasurement.humidity_drop_threshold:-8..-4;
     relativeHumidityMeasurement.humidity_not_handle_config:0..0;
     alarm.alarm:{off,siren};
     alarm.alarm_last:{off,siren};
     step:0..3;
     new_rule0_alarm.alarm_triggerflag:boolean;
     new_rule0_alarm.alarm_valueflag0:boolean;
     new_rule0_alarm.alarm_valueflag1:boolean;
     new_rule0_presenceSensor.presence_triggerflag:boolean;
     new_rule0_presenceSensor.presence_valueflag0:boolean;
     new_rule0_presenceSensor.presence_valueflag1:boolean;
   INVAR
     relativeHumidityMeasurement.humidity_not_handle_config = 0
    INVAR
        relativeHumidityMeasurement.humidity_rise_threshold = 4 &     relativeHumidityMeasurement.humidity_drop_threshold = -8 

   INVAR
      toint(new_rule0_alarm.alarm_valueflag0) + toint(new_rule0_alarm.alarm_valueflag1) < 2 
   INVAR
      toint(new_rule0_presenceSensor.presence_valueflag0) + toint(new_rule0_presenceSensor.presence_valueflag1) < 2 
   INVAR
      toint(new_rule0_alarm.alarm_triggerflag) + toint(new_rule0_presenceSensor.presence_triggerflag) = 1
   INVAR
     !( new_rule0_alarm.alarm_triggerflag=FALSE  &  new_rule0_alarm.alarm_valueflag0=FALSE  &  new_rule0_alarm.alarm_valueflag1=FALSE  &  new_rule0_presenceSensor.presence_triggerflag=FALSE  &  new_rule0_presenceSensor.presence_valueflag0=FALSE  &  new_rule0_presenceSensor.presence_valueflag1=FALSE ) 
   INVAR
     !( new_rule0_alarm.alarm_triggerflag=FALSE  &  new_rule0_alarm.alarm_valueflag0=FALSE  &  new_rule0_alarm.alarm_valueflag1=FALSE  &  new_rule0_presenceSensor.presence_triggerflag=FALSE  &  new_rule0_presenceSensor.presence_valueflag0=FALSE  &  new_rule0_presenceSensor.presence_valueflag1=FALSE ) 
   INVAR
     !( new_rule0_alarm.alarm_triggerflag=TRUE  &  new_rule0_alarm.alarm_valueflag0=FALSE  &  new_rule0_alarm.alarm_valueflag1=TRUE  &  new_rule0_presenceSensor.presence_triggerflag=FALSE  &  new_rule0_presenceSensor.presence_valueflag0=TRUE  &  new_rule0_presenceSensor.presence_valueflag1=FALSE ) 
   ASSIGN
    init(step) := 1;
    next(step) :=
        case
            step < 3 & step > 0: step + 1;
            step = 3: 0;
            TRUE: step;
    esac;

         init(relativeHumidityMeasurement.humidity_last) := 0;

     init(presenceSensor.presence):=present;
     next(presenceSensor.presence):=
       case
         next(step) = 2: not_present;
         next(step) = 3: not_present;
         TRUE: {not_present,present};
       esac;

         init(alarm.alarm) := off;
     
    init(relativeHumidityMeasurement.humidity):=0;     
    next(relativeHumidityMeasurement.humidity):=
        case

          -- 如果在threshold范围内，则温度不变
          relativeHumidityMeasurement.humidity_CONFIG<relativeHumidityMeasurement.humidity_rise_threshold & relativeHumidityMeasurement.humidity_CONFIG>relativeHumidityMeasurement.humidity_drop_threshold: relativeHumidityMeasurement.humidity;
          relativeHumidityMeasurement.humidity_CONFIG>=relativeHumidityMeasurement.humidity_rise_threshold & relativeHumidityMeasurement.humidity + 1<=20: relativeHumidityMeasurement.humidity + 1;
          relativeHumidityMeasurement.humidity_CONFIG<=relativeHumidityMeasurement.humidity_drop_threshold & relativeHumidityMeasurement.humidity - 1>=0: relativeHumidityMeasurement.humidity - 1;
          TRUE: relativeHumidityMeasurement.humidity;
        esac;

 init(relativeHumidityMeasurement.humidity_CONFIG):=0;
        next(relativeHumidityMeasurement.humidity_CONFIG):=
          case
            -- 超过threshold后重新计数
            relativeHumidityMeasurement.humidity_CONFIG>=relativeHumidityMeasurement.humidity_rise_threshold : 0;
            relativeHumidityMeasurement.humidity_CONFIG<=relativeHumidityMeasurement.humidity_drop_threshold : 0;
            TRUE: relativeHumidityMeasurement.humidity_CONFIG;
          esac;

      init(presenceSensor.presence_last):=present;
      init(smartPlug.switch_last):=on;

      next(presenceSensor.presence_last):=presenceSensor.presence;
      next(smartPlug.switch_last):=smartPlug.switch;
      next(relativeHumidityMeasurement.humidity_last):=relativeHumidityMeasurement.humidity;
      next(alarm.alarm_last):=alarm.alarm;

     next(alarm.alarm):=
       case
         next(step) = 2: siren;
         next(step) = 3: off;
         TRUE: alarm.alarm;
       esac;


      next(new_rule0_alarm.alarm_triggerflag) :=
          case
            (next(new_rule0_alarm.alarm_valueflag0) | next(new_rule0_alarm.alarm_valueflag1))=FALSE: FALSE;
            TRUE: new_rule0_alarm.alarm_triggerflag;
         esac;
      next(new_rule0_alarm.alarm_valueflag0) := new_rule0_alarm.alarm_valueflag0;
      next(new_rule0_alarm.alarm_valueflag1) := new_rule0_alarm.alarm_valueflag1;
      next(new_rule0_presenceSensor.presence_triggerflag) :=
          case
            (next(new_rule0_presenceSensor.presence_valueflag0) | next(new_rule0_presenceSensor.presence_valueflag1))=FALSE: FALSE;
            TRUE: new_rule0_presenceSensor.presence_triggerflag;
         esac;
      next(new_rule0_presenceSensor.presence_valueflag0) := new_rule0_presenceSensor.presence_valueflag0;
      next(new_rule0_presenceSensor.presence_valueflag1) := new_rule0_presenceSensor.presence_valueflag1;

    init(smartPlug.switch):=off;
    next(smartPlug.switch):=
          case
             relativeHumidityMeasurement.humidity=91&relativeHumidityMeasurement.humidity!=relativeHumidityMeasurement.humidity_last&relativeHumidityMeasurement.humidity_last=90:on;
             relativeHumidityMeasurement.humidity=81&relativeHumidityMeasurement.humidity!=relativeHumidityMeasurement.humidity_last&relativeHumidityMeasurement.humidity_last=80:on;
             alarm.alarm=siren&alarm.alarm!=alarm.alarm_last&presenceSensor.presence = not_present:on;
             (((new_rule0_alarm.alarm_valueflag0|new_rule0_alarm.alarm_valueflag1) & (new_rule0_alarm.alarm_triggerflag))->(alarm.alarm != alarm.alarm_last)) & ((new_rule0_alarm.alarm_valueflag0)->(alarm.alarm = off))&((new_rule0_alarm.alarm_valueflag1)->(alarm.alarm = siren)) & (((new_rule0_presenceSensor.presence_valueflag0|new_rule0_presenceSensor.presence_valueflag1) & (new_rule0_presenceSensor.presence_triggerflag))->(presenceSensor.presence != presenceSensor.presence_last)) & ((new_rule0_presenceSensor.presence_valueflag0)->(presenceSensor.presence = not_present))&((new_rule0_presenceSensor.presence_valueflag1)->(presenceSensor.presence = present)):off;
             TRUE:smartPlug.switch;
          esac;
