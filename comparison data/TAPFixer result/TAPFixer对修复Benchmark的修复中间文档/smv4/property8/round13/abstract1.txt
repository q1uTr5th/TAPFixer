MODULE RUNIN(delay)
VAR
  timer:0..20;
ASSIGN
  init(timer):=0;
  next(timer):=
      case
        delay=0:0;
        timer=0 & delay>0: delay;
        timer>0 & delay>0: timer - 1;
        TRUE: timer;
      esac;

MODULE main
   VAR
     presenceSensor.presence:{not_present,present};
     presenceSensor.presence_last:{not_present,present};
     smartPlug.switch:{off,on};
     smartPlug.switch_last:{off,on};
     relativeHumidityMeasurement.humidity:0..20;
     relativeHumidityMeasurement.humidity_last:0..20;
     relativeHumidityMeasurement.humidity_count:0..1;
     relativeHumidityMeasurement.humidity_CONFIG:-8..8;
     relativeHumidityMeasurement.humidity_rise_threshold:4..8;
     relativeHumidityMeasurement.humidity_drop_threshold:-8..-4;
     relativeHumidityMeasurement.humidity_not_handle_config:0..0;
     alarm.alarm:{off,siren};
     alarm.alarm_last:{off,siren};
     step:0..3;
     original_flag_rule0_alarm.alarm_0:boolean;
     original_flag_rule0_alarm.alarm_1:boolean;
     original_flag_rule0_presenceSensor.presence_0:boolean;
     original_flag_rule0_presenceSensor.presence_1:boolean;
     original_flag_rule1_alarm.alarm_0:boolean;
     original_flag_rule1_alarm.alarm_1:boolean;
     original_flag_rule1_presenceSensor.presence_0:boolean;
     original_flag_rule1_presenceSensor.presence_1:boolean;
     original_flag_rule3_alarm.alarm_0:boolean;
     original_flag_rule3_alarm.alarm_1:boolean;
   INVAR
     relativeHumidityMeasurement.humidity_not_handle_config = 0
    INVAR
        relativeHumidityMeasurement.humidity_rise_threshold = 4 &     relativeHumidityMeasurement.humidity_drop_threshold = -8 

   INVAR
     toint(original_flag_rule0_alarm.alarm_0) + toint(original_flag_rule0_alarm.alarm_1) < 2
   INVAR
     toint(original_flag_rule0_presenceSensor.presence_0) + toint(original_flag_rule0_presenceSensor.presence_1) < 2
   INVAR
     toint(original_flag_rule1_alarm.alarm_0) + toint(original_flag_rule1_alarm.alarm_1) < 2
   INVAR
     toint(original_flag_rule1_presenceSensor.presence_0) + toint(original_flag_rule1_presenceSensor.presence_1) < 2
   INVAR
     toint(original_flag_rule3_alarm.alarm_0) + toint(original_flag_rule3_alarm.alarm_1) < 2

   INVAR
     !(original_flag_rule3_alarm.alarm_0 = FALSE & original_flag_rule3_alarm.alarm_1 = TRUE )
   ASSIGN
    init(step) := 1;
    next(step) :=
        case
            step < 3 & step > 0: step + 1;
            step = 3: 0;
            TRUE: step;
    esac;

         init(relativeHumidityMeasurement.humidity_last) := 0;

     init(presenceSensor.presence):=not_present;
     next(presenceSensor.presence):=
       case
         next(step) = 2: not_present;
         next(step) = 3: not_present;
         TRUE: {not_present,present};
       esac;

         init(alarm.alarm) := off;
     
    init(relativeHumidityMeasurement.humidity):=0;     
    next(relativeHumidityMeasurement.humidity):=
        case

          -- 如果在threshold范围内，则温度不变
          relativeHumidityMeasurement.humidity_CONFIG<relativeHumidityMeasurement.humidity_rise_threshold & relativeHumidityMeasurement.humidity_CONFIG>relativeHumidityMeasurement.humidity_drop_threshold: relativeHumidityMeasurement.humidity;
          relativeHumidityMeasurement.humidity_CONFIG>=relativeHumidityMeasurement.humidity_rise_threshold & relativeHumidityMeasurement.humidity + 1<=20: relativeHumidityMeasurement.humidity + 1;
          relativeHumidityMeasurement.humidity_CONFIG<=relativeHumidityMeasurement.humidity_drop_threshold & relativeHumidityMeasurement.humidity - 1>=0: relativeHumidityMeasurement.humidity - 1;
          TRUE: relativeHumidityMeasurement.humidity;
        esac;

 init(relativeHumidityMeasurement.humidity_CONFIG):=0;
        next(relativeHumidityMeasurement.humidity_CONFIG):=
          case
            -- 超过threshold后重新计数
            relativeHumidityMeasurement.humidity_CONFIG>=relativeHumidityMeasurement.humidity_rise_threshold : 0;
            relativeHumidityMeasurement.humidity_CONFIG<=relativeHumidityMeasurement.humidity_drop_threshold : 0;
            TRUE: relativeHumidityMeasurement.humidity_CONFIG;
          esac;

      init(presenceSensor.presence_last):=present;
      init(smartPlug.switch_last):=on;

      next(presenceSensor.presence_last):=presenceSensor.presence;
      next(smartPlug.switch_last):=smartPlug.switch;
      next(relativeHumidityMeasurement.humidity_last):=relativeHumidityMeasurement.humidity;
      next(alarm.alarm_last):=alarm.alarm;

     next(alarm.alarm):=
       case
         next(step) = 2: siren;
         next(step) = 3: off;
         TRUE: alarm.alarm;
       esac;

      next(original_flag_rule0_alarm.alarm_0) := original_flag_rule0_alarm.alarm_0; 

      next(original_flag_rule0_alarm.alarm_1) := original_flag_rule0_alarm.alarm_1; 

      next(original_flag_rule0_presenceSensor.presence_0) := original_flag_rule0_presenceSensor.presence_0; 

      next(original_flag_rule0_presenceSensor.presence_1) := original_flag_rule0_presenceSensor.presence_1; 

      next(original_flag_rule1_alarm.alarm_0) := original_flag_rule1_alarm.alarm_0; 

      next(original_flag_rule1_alarm.alarm_1) := original_flag_rule1_alarm.alarm_1; 

      next(original_flag_rule1_presenceSensor.presence_0) := original_flag_rule1_presenceSensor.presence_0; 

      next(original_flag_rule1_presenceSensor.presence_1) := original_flag_rule1_presenceSensor.presence_1; 

      next(original_flag_rule3_alarm.alarm_0) := original_flag_rule3_alarm.alarm_0; 

      next(original_flag_rule3_alarm.alarm_1) := original_flag_rule3_alarm.alarm_1; 

    init(smartPlug.switch):=off;
    next(smartPlug.switch):=
          case
             relativeHumidityMeasurement.humidity=91&relativeHumidityMeasurement.humidity!=relativeHumidityMeasurement.humidity_last&relativeHumidityMeasurement.humidity_last=90 & ((original_flag_rule0_alarm.alarm_0)->(alarm.alarm = off)) & ((original_flag_rule0_alarm.alarm_1)->(alarm.alarm = siren)) & ((original_flag_rule0_presenceSensor.presence_0)->(presenceSensor.presence = not_present)) & ((original_flag_rule0_presenceSensor.presence_1)->(presenceSensor.presence = present)):on;
             relativeHumidityMeasurement.humidity=81&relativeHumidityMeasurement.humidity!=relativeHumidityMeasurement.humidity_last&relativeHumidityMeasurement.humidity_last=80 & ((original_flag_rule1_alarm.alarm_0)->(alarm.alarm = off)) & ((original_flag_rule1_alarm.alarm_1)->(alarm.alarm = siren)) & ((original_flag_rule1_presenceSensor.presence_0)->(presenceSensor.presence = not_present)) & ((original_flag_rule1_presenceSensor.presence_1)->(presenceSensor.presence = present)):on;
             alarm.alarm=siren&alarm.alarm!=alarm.alarm_last&presenceSensor.presence = not_present:on;
             presenceSensor.presence=present&presenceSensor.presence!=presenceSensor.presence_last & ((original_flag_rule3_alarm.alarm_0)->(alarm.alarm = off)) & ((original_flag_rule3_alarm.alarm_1)->(alarm.alarm = siren)):off;
             presenceSensor.presence=present&presenceSensor.presence!=presenceSensor.presence_last&alarm.alarm=siren:off;
             presenceSensor.presence=present&presenceSensor.presence!=presenceSensor.presence_last&alarm.alarm=off:off;
             presenceSensor.presence=not_present&presenceSensor.presence!=presenceSensor.presence_last&alarm.alarm=off:off;
             TRUE:smartPlug.switch;
          esac;
